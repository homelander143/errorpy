6A}}
def print_pattern(n):
    """
    Print the pattern based on the given number of rows n.
    
    Parameters:
    n (int): The number of rows in the pattern.
    """
    for i in range(1, n + 1):
        # Print the numbers for each row
        for j in range(i, 0, -1):
            print(j, end=' ')
        print()  # Move to the next line

def main():
    try:
        # Read the number of rows from the user
        n = int(input("Enter the number of rows for the pattern: "))
        
        # Print the pattern
        print_pattern(n)
    
    except ValueError:
        print("Invalid input! Please enter a valid integer.")

if __name__ == "__main__":
    main()



6B}}
def moving_average(n):
    """
    Read n numbers and print the moving average of two consecutive numbers.
    
    Parameters:
    n (int): The number of entries to process.
    """
    if n < 2:
        print("At least 2 numbers are required to calculate a moving average.")
        return

    # Initialize variables to hold the last two numbers
    prev_number = None
    current_number = None
    
    # Read the first number and initialize prev_number
    prev_number = float(input("Enter number 1: "))
    
    # Loop to process the remaining numbers
    for i in range(2, n + 1):
        current_number = float(input(f"Enter number {i}: "))
        
        # Calculate the moving average of the last two numbers
        moving_avg = (prev_number + current_number) / 2
        print(f"Moving average of {prev_number} and {current_number} is: {moving_avg}")
        
        # Update prev_number to the current_number for the next iteration
        prev_number = current_number

def main():
    try:
        # Read the number of entries from the user
        n = int(input("Enter the number of entries: "))
        
        # Calculate and print moving averages
        moving_average(n)
    
    except ValueError:
        print("Invalid input! Please enter a valid integer.")

if __name__ == "__main__":
    main()



6C}}
def is_armstrong_number(number):
    """
    Check if the given number is an Armstrong number.
    
    Parameters:
    number (int): The number to check.
    
    Returns:
    bool: True if the number is an Armstrong number, False otherwise.
    """
    # Convert the number to a string to easily iterate over digits
    digits = str(number)
    num_digits = len(digits)
    
    # Calculate the sum of each digit raised to the power of num_digits
    sum_of_powers = sum(int(digit) ** num_digits for digit in digits)
    
    # Check if the sum is equal to the original number
    return sum_of_powers == number

def main():
    try:
        # Read the number from the user
        num = int(input("Enter a number to check if it is an Armstrong number: "))
        
        # Check if the number is an Armstrong number
        if is_armstrong_number(num):
            print(f"{num} is an Armstrong number.")
        else:
            print(f"{num} is not an Armstrong number.")
    
    except ValueError:
        print("Invalid input! Please enter a valid integer.")

if __name__ == "__main__":
    main()



