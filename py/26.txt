26a}}

class Employee:
    def __init__(self, emp_id, name, position, salary):
        self.emp_id = emp_id
        self.name = name
        self.position = position
        self.salary = salary

    def __str__(self):
        return f"ID: {self.emp_id}, Name: {self.name}, Position: {self.position}, Salary: ${self.salary:.2f}"

class EmployeeManagementSystem:
    def __init__(self):
        self.employees = []

    def add_employee(self, emp_id, name, position, salary):
        new_employee = Employee(emp_id, name, position, salary)
        self.employees.append(new_employee)
        print(f"Employee {name} added successfully.")

    def display_employee(self, emp_id):
        for emp in self.employees:
            if emp.emp_id == emp_id:
                print(emp)
                return
        print("Employee not found.")

    def list_employees(self):
        if not self.employees:
            print("No employees to display.")
        else:
            for emp in self.employees:
                print(emp)

def main():
    system = EmployeeManagementSystem()

    while True:
        print("\nEmployee Management System")
        print("1. Add Employee")
        print("2. Display Employee")
        print("3. List All Employees")
        print("4. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            emp_id = input("Enter Employee ID: ")
            name = input("Enter Employee Name: ")
            position = input("Enter Employee Position: ")
            salary = float(input("Enter Employee Salary: "))
            system.add_employee(emp_id, name, position, salary)
        
        elif choice == '2':
            emp_id = input("Enter Employee ID to display: ")
            system.display_employee(emp_id)
        
        elif choice == '3':
            system.list_employees()
        
        elif choice == '4':
            print("Exiting system. Goodbye!")
            break
        
        else:
            print("Invalid choice. Please enter a number between 1 and 4.")

if __name__ == "__main__":
    main()



26b}}


import tkinter as tk

class OnOffApp:
    def __init__(self, root):
        self.root = root
        self.root.title("On/Off Button GUI")

        # Create and place the label
        self.status_label = tk.Label(root, text="Status: OFF", font=("Helvetica", 16))
        self.status_label.pack(pady=20)

        # Create and place the "On" button
        self.on_button = tk.Button(root, text="On", command=self.turn_on)
        self.on_button.pack(side=tk.LEFT, padx=10)

        # Create and place the "Off" button
        self.off_button = tk.Button(root, text="Off", command=self.turn_off)
        self.off_button.pack(side=tk.RIGHT, padx=10)

    def turn_on(self):
        self.status_label.config(text="Status: ON")
        self.on_button.config(state=tk.DISABLED)
        self.off_button.config(state=tk.NORMAL)

    def turn_off(self):
        self.status_label.config(text="Status: OFF")
        self.on_button.config(state=tk.NORMAL)
        self.off_button.config(state=tk.DISABLED)

def main():
    root = tk.Tk()
    app = OnOffApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()



